---
import TableOfContents from "../components/TableOfContents.astro";
import Layout from "../layouts/Layout.astro";
import "../styles/blog-styles.css";

const { frontmatter, headings } = Astro.props;
---

<Layout title="Blog Posts">
  <div class="blogContainer">
    <div class="blogTop">
      <div class="blogTitle">{frontmatter.title}</div>
      <div class="blogDate">Date Written: {frontmatter.date}</div>
    </div>

    <div class="blogContent">
      <div class="blogTableOfContents">
        <div class="tableOfContentsTitle">Table of Contents</div>
        <TableOfContents headings={headings} />
      </div>

      <slot class="blogText" />
    </div>
  </div>
</Layout>

<script>
  let copyButtonLabel =
    '<svg width="27" height="24" viewBox="0 0 15 15" id="copy"><path id="copySvgLogo" fill="#b9bec0" d="M4.00029246,4.08524952 L4,10.5 C4,11.8254834 5.03153594,12.9100387 6.33562431,12.9946823 L6.5,13 L10.9143985,13.000703 C10.7082819,13.5829319 10.1528467,14 9.5,14 L6,14 C4.34314575,14 3,12.6568542 3,11 L3,5.5 C3,4.84678131 3.41754351,4.29108512 4.00029246,4.08524952 Z M11.5,2 C12.3284271,2 13,2.67157288 13,3.5 L13,10.5 C13,11.3284271 12.3284271,12 11.5,12 L6.5,12 C5.67157288,12 5,11.3284271 5,10.5 L5,3.5 C5,2.67157288 5.67157288,2 6.5,2 L11.5,2 Z M11.5,3 L6.5,3 C6.22385763,3 6,3.22385763 6,3.5 L6,10.5 C6,10.7761424 6.22385763,11 6.5,11 L11.5,11 C11.7761424,11 12,10.7761424 12,10.5 L12,3.5 C12,3.22385763 11.7761424,3 11.5,3 Z"></path></svg>';
  let codeBlocks = Array.from(document.querySelectorAll("pre")); // Selects all <pre> elements and converts the NodeList to an array

  let messageBox = document.createElement("div"); // Create the message box
  messageBox.className = "message-box"; // Add the class name
  messageBox.innerText = "Code Copied!"; // Add the text
  messageBox.style.display = "none";

  for (let codeBlock of codeBlocks) {
    // Loop through the array of code blocks

    let wrapper = document.createElement("div"); // Create a wrapper element
    wrapper.style.position = "relative"; // Add the position relative style to the wrapper

    let copyButton = document.createElement("button");
    copyButton.className = "copy-code";
    copyButton.innerHTML = copyButtonLabel;

    let messageBox = document.createElement("div"); // Create the message box
    messageBox.className = "message-box"; // Add the class name
    messageBox.innerText = "Code Copied!"; // Add the text
    messageBox.style.display = "none";

    codeBlock.setAttribute("tabindex", "0"); // Add the tabindex attribute to the code block
    codeBlock.appendChild(copyButton); // Append the copy button to the code block

    if (codeBlock.parentNode) {
      // Check if codeBlock has a parent node
      codeBlock.parentNode.insertBefore(wrapper, codeBlock);
    }

    // wrap codebock with relative parent element
    wrapper.appendChild(codeBlock);
    wrapper.appendChild(messageBox); // Append the message box to the wrapper

    copyButton.addEventListener("click", async () => {
      await copyCode(codeBlock, copyButton, messageBox);
    });
  }

  async function copyCode(
    block: HTMLElement,
    button: HTMLElement,
    messageBox: HTMLElement
  ) {
    let code = block.querySelector("code");
    if (!code) {
      return; // Return if code is not found
    }
    let text = code.innerText;

    await navigator.clipboard.writeText(text);

    // visual feedback that task is completed
    // Show the message box
    messageBox.style.display = "block";

    setTimeout(() => {
      messageBox.style.display = "none";
    }, 1000);
  }

  // Get all <table> elements on the page
  const tables = document.querySelectorAll("table");

  // Loop through each <table> element
  tables.forEach((table) => {
    // Create a new <div> element with the class "tableWrapper"
    const wrapper = document.createElement("div");
    wrapper.classList.add("tableWrapper");

    // Insert the <div> element before the <table> element
    if (table.parentNode) {
      table.parentNode.insertBefore(wrapper, table);
    }

    // Move the <table> element inside the newly created <div> element
    wrapper.appendChild(table);
  });
</script>
